// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  email         String  @unique
  password_hash String?
  google_id     String? @unique
  display_name  String?
  first_name    String
  last_name     String
  avatar_url    String?

  ReceivedMessages Message[]       @relation("ReceivedMessages")
  SentMessages     Message[]       @relation("SentMessages")
  AIChatSession    AIChatSession[]
}

model Message {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  from_id Int
  to_id   Int
  message String

  from User @relation("SentMessages", fields: [from_id], references: [id])
  to   User @relation("ReceivedMessages", fields: [to_id], references: [id])
}

model AIChatSession {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user_id Int
  active  Boolean @default(true)

  user User @relation(fields: [user_id], references: [id])

  AIChat AIChat[]
}

model AIChat {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  session_id String
  prompt     String
  response   String

  session AIChatSession @relation(fields: [session_id], references: [id])
}
